{"version":3,"sources":["webpack:///./resources/js/modules/auth/pages/login/Page.js","webpack:///./resources/js/modules/auth/pages/login/components/Form.js","webpack:///./resources/js/modules/auth/pages/login/index.js"],"names":["Page","Component","constructor","props","validator","ReeValidate","email","password","state","credentials","remember","errors","handleChange","bind","handleSubmit","componentDidMount","$","attr","componentWillUnmount","removeAttr","name","value","setState","remove","validate","then","e","preventDefault","validateAll","success","submit","dispatch","login","catch","error","statusCode","_","forOwn","message","field","add","render","isAuthenticated","PropTypes","bool","isRequired","func","displayName","propTypes","string","object","Form","has","target","first","any","mapStateToProps","auth","connect"],"mappings":"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","file":"9.js","sourcesContent":["// import libs\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport $ from 'jquery'\nimport _ from 'lodash'\nimport { Redirect } from 'react-router-dom'\nimport { login } from '../../service'\nimport ReeValidate from 'ree-validate'\n\n// import components\nimport Form from './components/Form'\n\n// initialize component\nclass Page extends Component {\n  // set name of the component\n  static displayName = 'LoginPage'\n\n  // validate props\n  static propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.validator = new ReeValidate({\n      email: 'required|email',\n      password: 'required|min:6'\n    })\n\n    // set the state of the app\n    this.state = {\n      credentials: {\n        email: '',\n        password: '',\n        remember: false,\n      },\n      errors: this.validator.errors\n    }\n\n    // bind component with event handlers\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  // after mounting the component add a style to the body\n  componentDidMount() {\n    $('body').attr('style', 'background-color: #eee')\n  }\n\n  // remove body style before component leaves dom\n  componentWillUnmount() {\n    $('body').removeAttr('style')\n  }\n\n  // event to handle input change\n  handleChange(name, value) {\n    const { errors } = this.validator\n\n    this.setState({ credentials: { ...this.state.credentials, [name]: value } })\n\n    errors.remove(name)\n\n    this.validator.validate(name, value)\n      .then(() => {\n        this.setState({ errors })\n      })\n  }\n\n  // event to handle form submit\n  handleSubmit(e) {\n    e.preventDefault()\n    const { credentials } = this.state\n    const { errors } = this.validator\n\n    this.validator.validateAll(credentials)\n      .then((success) => {\n        if (success) {\n          this.submit(credentials)\n        } else {\n          this.setState({ errors })\n        }\n      })\n  }\n\n  submit(credentials) {\n    this.props.dispatch(login(credentials))\n      .catch(({ error, statusCode }) => {\n        const { errors } = this.validator\n\n        if (statusCode === 422) {\n          _.forOwn(error, (message, field) => {\n            errors.add(field, message);\n          });\n        } else if (statusCode === 401) {\n          errors.add('password', error);\n        }\n\n        this.setState({ errors })\n      })\n  }\n\n  // render component\n  render() {\n\n    // check if user is authenticated then redirect him to home page\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />\n    }\n    const props = {\n      email: this.state.credentials.email,\n      password: this.state.credentials.password,\n      remember: this.state.credentials.remember,\n      errors: this.state.errors,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n    }\n\n    return (<div className=\"container py-5\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"mx-auto\">\n              <span className=\"anchor\"/>\n              <div className=\"card has-shadow\">\n                <div className=\"card-body\">\n                  <Form {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>)\n  }\n}\n\nexport default Page\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst displayName = 'LoginForm'\nconst propTypes = {\n  email: PropTypes.string,\n  password: PropTypes.string,\n  remember: PropTypes.bool,\n  errors: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n}\n\nconst Form = ({ email, password, remember, errors, handleChange, handleSubmit }) => (\n  <form className=\"form\" role=\"form\" onSubmit={handleSubmit} noValidate>\n    <h2 className=\"card-title\">Please sign in</h2>\n    <div className=\"form-group\">\n      <label htmlFor=\"email\" className=\"sr-only\">Email</label>\n      <input type=\"text\"\n             className={`form-control form-control-lg rounded-0 ${errors.has('email') && 'is-invalid'}`}\n             name=\"email\"\n             id=\"email\"\n             placeholder=\"Email address\"\n             value={email || ''}\n             onChange={e => handleChange(e.target.name, e.target.value)}\n             required\n             autoFocus/>\n      {errors.has('email') && <div className=\"invalid-feedback\">{errors.first('email')}</div>}\n    </div>\n    <div className=\"form-group\">\n      <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n      <input type=\"password\"\n             className={`form-control form-control-lg rounded-0 ${errors.has('password') && 'is-invalid'}`}\n             id=\"password\"\n             name=\"password\"\n             placeholder=\"Password\"\n             value={password || ''}\n             onChange={e => handleChange(e.target.name, e.target.value)}\n             required/>\n      {errors.has('password') && <div className=\"invalid-feedback\">{errors.first('password')}</div>}\n    </div>\n    <div>\n      <label className=\"custom-control custom-checkbox\">\n        <input type=\"checkbox\"\n               name=\"remember\"\n               className=\"custom-control-input\"\n               onChange={e => handleChange(e.target.name, !remember)}/>\n        <span className=\"custom-control-indicator\" />\n        <span className=\"custom-control-description small\">Remember me on this computer</span>\n      </label>\n    </div>\n    <button className=\"btn btn-lg btn-primary btn-block\"\n            type=\"submit\"\n            disabled={errors.any()}>Sign In</button>\n    <p>Not a member? <Link to='/register'>Signup here</Link></p>\n  </form>\n)\n\nForm.displayName = displayName\nForm.propTypes = propTypes\n\nexport default Form\n","// import libs\nimport { connect } from 'react-redux'\n\n// import components\nimport Page from './Page'\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n  }\n}\n\nexport default connect(mapStateToProps)(Page)\n"],"sourceRoot":""}